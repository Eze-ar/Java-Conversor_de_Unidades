//by EZE-ar

package Conversor;

import conversores.Distancia;
import conversores.Masa;
import conversores.Temperatura;
import java.awt.Color;
import java.awt.event.KeyEvent;

public class Conversor extends javax.swing.JFrame {

    private final String[] unidades_distancia = { "cm", "m", "Km", "mi", "in" };
    private final String[] unidades_masa = { "mg", "g", "Kg", "ton", "lb", "on"};
    private final String[] unidades_temperatura = { "ºC", "K", "ºF" };
    
    private boolean focus_1 = true;
    
    public Conversor() {
        initComponents();
    }
    
    private void Convertir()
    {
        txtIngreso.setText(txtIngreso.getText().replaceAll((","), "."));
        txtSalida.setText(txtSalida.getText().replaceAll((","), "."));

        txtIngreso.setText(txtIngreso.getText().replaceAll(("[^0-9.]"), ""));
        txtSalida.setText(txtSalida.getText().replaceAll(("[^0-9.]"), ""));
        
        if (txtIngreso.getText().equals("") && focus_1)
            return;

        if (txtSalida.getText().equals("") && !focus_1)
            return;
        
        if (cmbMagnitud.getSelectedItem().equals("Distancia"))
        {
            Distancia num;
            if (focus_1)
            {
                num = new Distancia(Double.parseDouble(txtIngreso.getText()), (String) cmbUnidadIn.getSelectedItem());
                txtSalida.setText(String.valueOf(num.Cambiar((String) cmbUnidadOut.getSelectedItem())));
            }
            else
            {
                num = new Distancia(Double.parseDouble(txtSalida.getText()), (String) cmbUnidadOut.getSelectedItem());
                txtIngreso.setText(String.valueOf(num.Cambiar((String) cmbUnidadIn.getSelectedItem())));
            }
        }
        else if (cmbMagnitud.getSelectedItem().equals("Masa"))
        {
            Masa num;
            if (focus_1)
            {
                num = new Masa(Double.parseDouble(txtIngreso.getText()), (String) cmbUnidadIn.getSelectedItem());
                txtSalida.setText(String.valueOf(num.Cambiar((String) cmbUnidadOut.getSelectedItem())));
            }
            else
            {
                num = new Masa(Double.parseDouble(txtSalida.getText()), (String) cmbUnidadOut.getSelectedItem());
                txtIngreso.setText(String.valueOf(num.Cambiar((String) cmbUnidadIn.getSelectedItem())));
            }
        }
        else if (cmbMagnitud.getSelectedItem().equals("Temperatura"))
        {
            Temperatura num;
            if (focus_1)
            {
                num = new Temperatura(Double.parseDouble(txtIngreso.getText()), (String) cmbUnidadIn.getSelectedItem());
                txtSalida.setText(String.valueOf(num.Cambiar((String) cmbUnidadOut.getSelectedItem())));
            }
            else
            {
                num = new Temperatura(Double.parseDouble(txtSalida.getText()), (String) cmbUnidadOut.getSelectedItem());
                txtIngreso.setText(String.valueOf(num.Cambiar((String) cmbUnidadIn.getSelectedItem())));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIngreso = new javax.swing.JTextField();
        txtSalida = new javax.swing.JTextField();
        btnConvertir = new javax.swing.JButton();
        cmbMagnitud = new javax.swing.JComboBox<>();
        cmbUnidadIn = new javax.swing.JComboBox<>();
        cmbUnidadOut = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor de Unidades [by EZE-ar]");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(29, 130, 180));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 0, 255));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(6, 21, 108));
        jLabel1.setText("Conversor de Unidades");

        txtIngreso.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtIngreso.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIngreso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIngresoFocusGained(evt);
            }
        });
        txtIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngresoActionPerformed(evt);
            }
        });
        txtIngreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIngresoKeyReleased(evt);
            }
        });

        txtSalida.setEditable(false);
        txtSalida.setBackground(new java.awt.Color(0, 0, 0));
        txtSalida.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtSalida.setForeground(new java.awt.Color(102, 255, 102));
        txtSalida.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSalida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalidaFocusGained(evt);
            }
        });
        txtSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalidaActionPerformed(evt);
            }
        });
        txtSalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSalidaKeyReleased(evt);
            }
        });

        btnConvertir.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnConvertir.setText("Convertir");
        btnConvertir.setMaximumSize(null);
        btnConvertir.setMinimumSize(null);
        btnConvertir.setPreferredSize(new java.awt.Dimension(100, 30));
        btnConvertir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConvertirMouseClicked(evt);
            }
        });
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        cmbMagnitud.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        cmbMagnitud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Distancia", "Masa", "Temperatura" }));
        cmbMagnitud.setPreferredSize(new java.awt.Dimension(136, 40));
        cmbMagnitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMagnitudActionPerformed(evt);
            }
        });

        cmbUnidadIn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbUnidadIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cm", "m", "Km", "mi", "in" }));
        cmbUnidadIn.setMaximumSize(null);
        cmbUnidadIn.setPreferredSize(new java.awt.Dimension(60, 30));
        cmbUnidadIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUnidadInActionPerformed(evt);
            }
        });

        cmbUnidadOut.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cmbUnidadOut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cm", "m", "Km", "mi", "in" }));
        cmbUnidadOut.setMaximumSize(null);
        cmbUnidadOut.setPreferredSize(new java.awt.Dimension(60, 30));
        cmbUnidadOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUnidadOutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel2.setText("=");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cmbUnidadIn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel2)
                                .addGap(26, 26, 26)
                                .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbUnidadOut, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(cmbMagnitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(cmbMagnitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUnidadIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbUnidadOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbMagnitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMagnitudActionPerformed
        cmbUnidadIn.removeAllItems();
        cmbUnidadOut.removeAllItems();
        
        if (cmbMagnitud.getSelectedItem().equals("Distancia"))
        {
            for (String unidades_distancia1 : unidades_distancia) {
                cmbUnidadIn.addItem(unidades_distancia1);
                cmbUnidadOut.addItem(unidades_distancia1);
            }
        }
        else if (cmbMagnitud.getSelectedItem().equals("Masa"))
        {
            for (String unidades_masal : unidades_masa) {
                cmbUnidadIn.addItem(unidades_masal);
                cmbUnidadOut.addItem(unidades_masal);
            }
        }
        else if (cmbMagnitud.getSelectedItem().equals("Temperatura"))
        {
            for (String unidades_temperatural : unidades_temperatura) {
                cmbUnidadIn.addItem(unidades_temperatural);
                cmbUnidadOut.addItem(unidades_temperatural);
            }
        }
    }//GEN-LAST:event_cmbMagnitudActionPerformed

    private void btnConvertirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConvertirMouseClicked
        Convertir();
    }//GEN-LAST:event_btnConvertirMouseClicked

    private void txtIngresoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIngresoFocusGained
        focus_1 = true;
    }//GEN-LAST:event_txtIngresoFocusGained

    private void txtSalidaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalidaFocusGained
        focus_1 = false;
    }//GEN-LAST:event_txtSalidaFocusGained

    private void txtIngresoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresoKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            Convertir();
    }//GEN-LAST:event_txtIngresoKeyReleased

    private void txtSalidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalidaKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            Convertir();
    }//GEN-LAST:event_txtSalidaKeyReleased

    private void cmbUnidadOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUnidadOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUnidadOutActionPerformed

    private void txtIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresoActionPerformed

    private void cmbUnidadInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUnidadInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUnidadInActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConvertirActionPerformed

    private void txtSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalidaActionPerformed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Conversor conversor = new Conversor();
            conversor.setVisible(true);
            conversor.setLocationRelativeTo(null); //agrego esto para centrar la pantalla
            conversor.getContentPane().setBackground(Color.decode("#E49e50")); //color de la ventana
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JComboBox<String> cmbMagnitud;
    private javax.swing.JComboBox<String> cmbUnidadIn;
    private javax.swing.JComboBox<String> cmbUnidadOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtIngreso;
    private javax.swing.JTextField txtSalida;
    // End of variables declaration//GEN-END:variables
//by EZE-ar
}
